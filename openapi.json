{
  "openapi": "3.1.0",
  "info": {
    "title": "Spotik GPT API",
    "version": "1.0.0",
    "description": "A Spotify integration API that provides enhanced playlist management and music recommendations"
  },
  "servers": [
    {
      "url": "https://spotik-gpt.onrender.com"
    }
  ],
  "paths": {
    "/playlists": {
      "get": {
        "operationId": "getPlaylists",
        "summary": "Get all user playlists",
        "parameters": [
          { "name": "user_id", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "List of playlists" } }
      }
    },
    "/top-playlists": {
      "get": {
        "operationId": "getTopPlaylists",
        "summary": "Get top playlists by followers",
        "parameters": [
          { "name": "user_id", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Top playlists" } }
      }
    },
    "/saved-playlists": {
      "get": {
        "operationId": "getSavedPlaylists",
        "summary": "Get saved playlists from other users",
        "parameters": [
          { "name": "user_id", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "List of saved playlists" } }
      }
    },
    "/top-tracks": {
      "get": {
        "operationId": "getTopTracks",
        "summary": "Get user's top tracks",
        "parameters": [
          { "name": "user_id", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "range", "in": "query", "required": false, "schema": { "type": "string", "enum": ["short_term", "medium_term", "long_term"] } }
        ],
        "responses": { "200": { "description": "Top tracks" } }
      }
    },
    "/duplicates": {
      "get": {
        "operationId": "findDuplicates",
        "summary": "Find duplicate tracks in a playlist",
        "parameters": [
          { "name": "user_id", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "playlist_id", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "List of duplicate tracks" } }
      }
    },
    "/remove-duplicates": {
      "post": {
        "operationId": "removeDuplicates",
        "summary": "Remove duplicate tracks from a playlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": { "type": "string" },
                  "playlist_id": { "type": "string" },
                  "uris": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["user_id", "playlist_id", "uris"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Duplicates removed successfully" } }
      }
    },
    "/shuffle-smart": {
      "post": {
        "operationId": "shuffleSmart",
        "summary": "Smart shuffle playlist based on audio features",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": { "type": "string" },
                  "playlist_id": { "type": "string" }
                },
                "required": ["user_id", "playlist_id"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Playlist shuffled successfully" } }
      }
    },
    "/generate-playlist": {
      "post": {
        "operationId": "generatePlaylist",
        "summary": "Create a new playlist based on seed tracks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": { "type": "string" },
                  "seeds": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "name": { "type": "string" }
                },
                "required": ["user_id", "seeds"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Playlist created successfully" } }
      }
    },
    "/profile": {
      "get": {
        "operationId": "getProfile",
        "summary": "Get user's musical profile",
        "parameters": [
          { "name": "user_id", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "User's musical profile" } }
      }
    },
    "/compare-users": {
      "get": {
        "operationId": "compareUsers",
        "summary": "Compare musical preferences between two users",
        "parameters": [
          { "name": "user1", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "user2", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Musical compatibility analysis" } }
      }
    },
    "/recommend-new": {
      "post": {
        "operationId": "recommendNew",
        "summary": "Get music recommendations based on a track/album",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": { "type": "string" },
                  "seed_uri": { "type": "string" }
                },
                "required": ["user_id", "seed_uri"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Music recommendations" } }
      }
    }
  }
}
